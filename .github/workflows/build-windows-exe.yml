name: Build Windows EXE

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_gui.txt
        echo "Dependencies installed successfully"
        
    - name: Install PyInstaller
      run: |
        pip install pyinstaller
        echo "PyInstaller installed successfully"
        
    - name: Build optimized EXE
      run: |
        echo "Starting PyInstaller build..."
        
        # 使用优化的打包配置
        pyinstaller --onefile --windowed --name=FileRenamer ^
          --clean --optimize=2 --strip ^
          --exclude-module=matplotlib --exclude-module=numpy ^
          --exclude-module=pandas --exclude-module=scipy ^
          --exclude-module=sklearn --exclude-module=tensorflow ^
          --exclude-module=torch --exclude-module=onnxruntime ^
          --exclude-module=cv2 --exclude-module=opencv ^
          --exclude-module=rapidocr --exclude-module=tkinter ^
          --exclude-module=wx --exclude-module=kivy ^
          --exclude-module=IPython --exclude-module=jupyter ^
          --exclude-module=notebook --exclude-module=sphinx ^
          --exclude-module=docutils --exclude-module=pytest ^
          --exclude-module=unittest --exclude-module=email ^
          --exclude-module=http --exclude-module=urllib3 ^
          --exclude-module=requests --exclude-module=sqlite3 ^
          --exclude-module=xml --exclude-module=html ^
          --exclude-module=xmlrpc --exclude-module=multiprocessing ^
          --exclude-module=concurrent --exclude-module=asyncio ^
          --exclude-module=logging --exclude-module=argparse ^
          --exclude-module=getopt --exclude-module=doctest ^
          --exclude-module=pdb --exclude-module=profile ^
          --exclude-module=cProfile ^
          --hidden-import=PyQt6.QtCore ^
          --hidden-import=PyQt6.QtWidgets ^
          --hidden-import=PyQt6.QtGui ^
          --hidden-import=pytesseract ^
          --hidden-import=pypdf ^
          --hidden-import=docx ^
          --hidden-import=chardet ^
          --hidden-import=PIL ^
          --hidden-import=PIL.Image ^
          file_renamer_gui.py
          
        echo "PyInstaller build completed"
        
    - name: Check file size
      run: |
        echo "Checking EXE file size..."
        if (Test-Path "dist\FileRenamer.exe") {
          $size = (Get-Item "dist\FileRenamer.exe").Length / 1MB
          Write-Host "EXE file size: $([math]::Round($size, 2)) MB"
          if ($size -gt 200) {
            Write-Host "Warning: File size is larger than expected (>200MB)"
          } else {
            Write-Host "Success: File size is within expected range"
          }
        } else {
          Write-Host "Error: EXE file not found"
          exit 1
        }
        
    - name: Upload EXE artifact
      uses: actions/upload-artifact@v4
      with:
        name: FileRenamer-Windows
        path: dist/FileRenamer.exe
        retention-days: 30
        
    - name: Create release info
      run: |
        $version = Get-Date -Format "yyyy.MM.dd"
        $size = (Get-Item "dist\FileRenamer.exe").Length / 1MB
        $sizeFormatted = [math]::Round($size, 2)
        
        $releaseInfo = @"
        # FileRenamer Windows EXE
        
        **Build Date:** $version
        **File Size:** $sizeFormatted MB
        **Build Type:** Optimized (Stripped & Excluded unnecessary modules)
        
        ## Changes in this build:
        - Optimized dependencies and removed unused libraries
        - Excluded unnecessary Python modules (numpy, pandas, etc.)
        - Enabled PyInstaller optimizations (--strip, --optimize=2)
        - Reduced file size significantly from ~500MB
        
        ## Installation:
        1. Download the EXE file
        2. Run directly (no installation required)
        
        ## System Requirements:
        - Windows 10/11 (64-bit)
        - No additional Python installation required
        "@
        
        $releaseInfo | Out-File -FilePath "release-notes.md" -Encoding UTF8
        
    - name: Upload release notes
      uses: actions/upload-artifact@v4
      with:
        name: Release-Notes
        path: release-notes.md
        retention-days: 30
